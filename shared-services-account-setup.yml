AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a S3 bucket for codepipeline to store the artifacts

Parameters:
  CodePipelineS3BucketName:
    Description: "The Bucket name to be given where the codepipeline will store its artifacts"
    Type: String
  DevAccountNumber:
    Description: "The AWS account number of compute dev"
    Type: Number
  GovernanceCompany:
    Description: "The Company name to be given"
    Type: String
    AllowedValues:
      - WHLAU
      - DJ
      - CRG
  GovernanceDepartment:
    Description: "The Department name to be given"
    Type: String
  GovernanceApplication:
    Description: "The Application name to be given"
    Type: String
    AllowedValues:
      - Inventory
      - OMS
  GovernanceLayer:
    Description: "The Layer name to be given"
    Type: String
  GovernanceEnvironment:
    Description: "The Environment name to be given"
    Type: String
    AllowedValues:
      - DEV
      - UAT
      - PROD
  GovernanceBrand:
    Description: "The Brand name to be given"
    Type: String
  GovernanceApprover:
    Description: "The Approver name to be given"
    Type: String
  GovernanceProject:
    Description: "The Project name to be given"
    Type: String

Resources:
  KMSKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles in Dev/Test/Prod accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      Tags:
        - Key: 'whlau:governance:company'
          Value: !Ref GovernanceCompany
        - Key: 'whlau:governance:department'
          Value: !Ref GovernanceDepartment
        - Key: 'whlau:governance:application'
          Value: !Ref GovernanceApplication
        - Key: 'whlau:governance:layer'
          Value: !Ref GovernanceLayer
        - Key: 'whlau:governance:environment'
          Value: !Ref GovernanceEnvironment
        - Key: 'whlau:governance:brand'
          Value: !Ref GovernanceBrand
        - Key: 'whlau:governance:Approver'
          Value: GovernanceApprover
        - Key: 'whlau:governance:Project'
          Value: GovernanceProject
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                Fn::Sub: arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          - Effect: Allow
            Principal:
              AWS:
                - Fn::Sub: arn:aws:iam::${DevAccountNumber}:root
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
  
  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/codepipeline-cross-account
      TargetKeyId: 
        Ref: KMSKey

  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: CodePipelineS3BucketName
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: 'whlau:governance:company'
          Value: !Ref GovernanceCompany
        - Key: 'whlau:governance:department'
          Value: !Ref GovernanceDepartment
        - Key: 'whlau:governance:application'
          Value: !Ref GovernanceApplication
        - Key: 'whlau:governance:layer'
          Value: !Ref GovernanceLayer
        - Key: 'whlau:governance:environment'
          Value: !Ref GovernanceEnvironment
        - Key: 'whlau:governance:brand'
          Value: !Ref GovernanceBrand
        - Key: 'whlau:governance:Approver'
          Value: GovernanceApprover
        - Key: 'whlau:governance:Project'
          Value: GovernanceProject